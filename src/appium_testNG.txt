Convention:
- Do not combine multiple screen into 1 flow method
- 1 screen can have more than one flow methods
- BaseFlow: goToMethod (navigation)


* Apache Commons Validator library in Maven
// LoginTest class
{
	AppiumDriver<MobileElement> appiumDriver = 	DriverFactory.getDriver(Platform.ANDROID);
	List<LoginCred> loginCreds = new ArrayList<>();
	loginCreds.add(new LoginCred("teo@", "12345678"));
	loginCreds.add(new LoginCred("teo@sth.com", "1234567"));
	loginCreds.add(new LoginCred("teo@sth.com", "12345678"));
	
	try{
		for (LoginCred loginCred : loginCreds) {
			LoginFlow loginFlow = new LoginFlow(appiumDriver, loginCred.getEmail(), loginCred.getPassword());
			loginFlow.gotoLoginScreen();
			loginFlow.login();
			loginFlow.verifyLogin();
		}
	}catch(Exception e){}

	appiumDriver.quit();
}

public static class LoginCred {
	private String email;
	private String password;

	public LoginCred(String email, String password) {
		this.email = email;
		this.password = password;
	}

	public String getEmail() {
		return email;
	}

	public String getPassword() {
		return password;
	}
}

=============================TESTNG=============================
TestNG is a test framework support ...

Install TestNG:
Go to Maven repository -> search TestNG -> choose version -> import to .pom file
Set @Test before method want to execute without main method

- Create Test Suite
Go to TestNG home page -> Documentation -> testng.xml -> copy example -> 
[Create Resouce folder] -> paste

+ TestNG Hooks
+ Default Method Execution sequence and priority
+ Hard Assertion and Soft Assertion
+ Put Assertion methods into test flow
+ Data Driven with Data Provider
+ GSONDataObjectBuilder Class with GSON 

Sequence
@BeforeSuite
@BeforeTest
@BeforeClass
@BeforeMethod
@Test
@AfterMethod
@AfterClass
@AfterTest
@AfterSuite

+ testNG method execute with order by alphabet
+ priority, dependsOnMethod attribute (research)

=============================Assertion=============================

* Hard Assertion
- When method has error in hard assertion, code below it doesn't execute any more

* Soft Assertion
SoftAssert softAssert = new SoftAssert();
softAssert.assertEqual(actualResult, expectedResult, message);
softAssert.assertAll();

=============================Data Driven=============================
+ return a data set can be loop
+ it is called DataProvider in TestNG
